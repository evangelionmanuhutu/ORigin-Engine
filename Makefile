# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  assimp_config = debug
  origin_glfw_config = debug
  glad_config = debug
  ImGui_config = debug
  yaml_cpp_config = debug
  box2d_config = debug
  freetype_config = debug
  msdfgen_config = debug
  msdf_atlas_gen_config = debug
  JoltPhysics_config = debug
  Optick_config = debug
  FastXml_config = debug
  lowlevel_config = debug
  LowLevelAABB_config = debug
  LowLevelDynamics_config = debug
  PhysX_config = debug
  PhysXCharacterKinematic_config = debug
  PhysXCommon_config = debug
  PhysXCooking_config = debug
  PhysXExtensions_config = debug
  PhysXFoundation_config = debug
  PhysXPvdSDK_config = debug
  PhysXTask_config = debug
  PhysXVehicle_config = debug
  PhysXVehicle2_config = debug
  SceneQuery_config = debug
  SimulationController_config = debug
  ORigin_config = debug
  Editor_config = debug
  Runtime_config = debug
  ORigin_ScriptCore_config = debug
  Sandbox_config = debug

else ifeq ($(config),release)
  assimp_config = release
  origin_glfw_config = release
  glad_config = release
  ImGui_config = release
  yaml_cpp_config = release
  box2d_config = release
  freetype_config = release
  msdfgen_config = release
  msdf_atlas_gen_config = release
  JoltPhysics_config = release
  Optick_config = release
  FastXml_config = release
  lowlevel_config = release
  LowLevelAABB_config = release
  LowLevelDynamics_config = release
  PhysX_config = release
  PhysXCharacterKinematic_config = release
  PhysXCommon_config = release
  PhysXCooking_config = release
  PhysXExtensions_config = release
  PhysXFoundation_config = release
  PhysXPvdSDK_config = release
  PhysXTask_config = release
  PhysXVehicle_config = release
  PhysXVehicle2_config = release
  SceneQuery_config = release
  SimulationController_config = release
  ORigin_config = release
  Editor_config = release
  Runtime_config = release
  ORigin_ScriptCore_config = release
  Sandbox_config = release

else ifeq ($(config),dist)
  assimp_config = dist
  origin_glfw_config = dist
  glad_config = dist
  ImGui_config = dist
  yaml_cpp_config = dist
  box2d_config = dist
  freetype_config = dist
  msdfgen_config = dist
  msdf_atlas_gen_config = dist
  JoltPhysics_config = dist
  Optick_config = dist
  FastXml_config = dist
  lowlevel_config = dist
  LowLevelAABB_config = dist
  LowLevelDynamics_config = dist
  PhysX_config = dist
  PhysXCharacterKinematic_config = dist
  PhysXCommon_config = dist
  PhysXCooking_config = dist
  PhysXExtensions_config = dist
  PhysXFoundation_config = dist
  PhysXPvdSDK_config = dist
  PhysXTask_config = dist
  PhysXVehicle_config = dist
  PhysXVehicle2_config = dist
  SceneQuery_config = dist
  SimulationController_config = dist
  ORigin_config = dist
  Editor_config = dist
  Runtime_config = dist
  ORigin_ScriptCore_config = dist
  Sandbox_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := assimp origin-glfw glad ImGui yaml-cpp box2d freetype msdfgen msdf-atlas-gen JoltPhysics Optick FastXml lowlevel LowLevelAABB LowLevelDynamics PhysX PhysXCharacterKinematic PhysXCommon PhysXCooking PhysXExtensions PhysXFoundation PhysXPvdSDK PhysXTask PhysXVehicle PhysXVehicle2 SceneQuery SimulationController ORigin Editor Runtime ORigin-ScriptCore Sandbox

.PHONY: all clean help $(PROJECTS) Dependecies Engine PhysX

all: $(PROJECTS)

Dependecies: ImGui JoltPhysics Optick assimp box2d freetype glad msdf-atlas-gen msdfgen origin-glfw yaml-cpp

Engine: Editor ORigin ORigin-ScriptCore Runtime Sandbox

PhysX: FastXml LowLevelAABB LowLevelDynamics PhysX PhysXCharacterKinematic PhysXCommon PhysXCooking PhysXExtensions PhysXFoundation PhysXPvdSDK PhysXTask PhysXVehicle PhysXVehicle2 SceneQuery SimulationController lowlevel

assimp:
ifneq (,$(assimp_config))
	@echo "==== Building assimp ($(assimp_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f assimp.make config=$(assimp_config)
endif

origin-glfw:
ifneq (,$(origin_glfw_config))
	@echo "==== Building origin-glfw ($(origin_glfw_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f origin-glfw.make config=$(origin_glfw_config)
endif

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f glad.make config=$(glad_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f ImGui.make config=$(ImGui_config)
endif

yaml-cpp:
ifneq (,$(yaml_cpp_config))
	@echo "==== Building yaml-cpp ($(yaml_cpp_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f yaml-cpp.make config=$(yaml_cpp_config)
endif

box2d:
ifneq (,$(box2d_config))
	@echo "==== Building box2d ($(box2d_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f box2d.make config=$(box2d_config)
endif

freetype:
ifneq (,$(freetype_config))
	@echo "==== Building freetype ($(freetype_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f freetype.make config=$(freetype_config)
endif

msdfgen: freetype
ifneq (,$(msdfgen_config))
	@echo "==== Building msdfgen ($(msdfgen_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f msdfgen.make config=$(msdfgen_config)
endif

msdf-atlas-gen: msdfgen
ifneq (,$(msdf_atlas_gen_config))
	@echo "==== Building msdf-atlas-gen ($(msdf_atlas_gen_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f msdf-atlas-gen.make config=$(msdf_atlas_gen_config)
endif

JoltPhysics:
ifneq (,$(JoltPhysics_config))
	@echo "==== Building JoltPhysics ($(JoltPhysics_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f JoltPhysics.make config=$(JoltPhysics_config)
endif

Optick:
ifneq (,$(Optick_config))
	@echo "==== Building Optick ($(Optick_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f Optick.make config=$(Optick_config)
endif

FastXml:
ifneq (,$(FastXml_config))
	@echo "==== Building FastXml ($(FastXml_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f FastXml.make config=$(FastXml_config)
endif

lowlevel:
ifneq (,$(lowlevel_config))
	@echo "==== Building lowlevel ($(lowlevel_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f lowlevel.make config=$(lowlevel_config)
endif

LowLevelAABB:
ifneq (,$(LowLevelAABB_config))
	@echo "==== Building LowLevelAABB ($(LowLevelAABB_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f LowLevelAABB.make config=$(LowLevelAABB_config)
endif

LowLevelDynamics:
ifneq (,$(LowLevelDynamics_config))
	@echo "==== Building LowLevelDynamics ($(LowLevelDynamics_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f LowLevelDynamics.make config=$(LowLevelDynamics_config)
endif

PhysX: lowlevel LowLevelAABB LowLevelDynamics PhysXCommon PhysXFoundation PhysXPvdSDK PhysXTask SceneQuery SimulationController
ifneq (,$(PhysX_config))
	@echo "==== Building PhysX ($(PhysX_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysX.make config=$(PhysX_config)
endif

PhysXCharacterKinematic: PhysXFoundation
ifneq (,$(PhysXCharacterKinematic_config))
	@echo "==== Building PhysXCharacterKinematic ($(PhysXCharacterKinematic_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCharacterKinematic.make config=$(PhysXCharacterKinematic_config)
endif

PhysXCommon: PhysXFoundation
ifneq (,$(PhysXCommon_config))
	@echo "==== Building PhysXCommon ($(PhysXCommon_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCommon.make config=$(PhysXCommon_config)
endif

PhysXCooking: PhysXCommon PhysXFoundation
ifneq (,$(PhysXCooking_config))
	@echo "==== Building PhysXCooking ($(PhysXCooking_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCooking.make config=$(PhysXCooking_config)
endif

PhysXExtensions: FastXml PhysXCommon PhysXFoundation PhysXPvdSDK
ifneq (,$(PhysXExtensions_config))
	@echo "==== Building PhysXExtensions ($(PhysXExtensions_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXExtensions.make config=$(PhysXExtensions_config)
endif

PhysXFoundation:
ifneq (,$(PhysXFoundation_config))
	@echo "==== Building PhysXFoundation ($(PhysXFoundation_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXFoundation.make config=$(PhysXFoundation_config)
endif

PhysXPvdSDK: PhysXFoundation
ifneq (,$(PhysXPvdSDK_config))
	@echo "==== Building PhysXPvdSDK ($(PhysXPvdSDK_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXPvdSDK.make config=$(PhysXPvdSDK_config)
endif

PhysXTask:
ifneq (,$(PhysXTask_config))
	@echo "==== Building PhysXTask ($(PhysXTask_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXTask.make config=$(PhysXTask_config)
endif

PhysXVehicle: PhysXFoundation PhysXPvdSDK
ifneq (,$(PhysXVehicle_config))
	@echo "==== Building PhysXVehicle ($(PhysXVehicle_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXVehicle.make config=$(PhysXVehicle_config)
endif

PhysXVehicle2: PhysXFoundation PhysXPvdSDK
ifneq (,$(PhysXVehicle2_config))
	@echo "==== Building PhysXVehicle2 ($(PhysXVehicle2_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXVehicle2.make config=$(PhysXVehicle2_config)
endif

SceneQuery:
ifneq (,$(SceneQuery_config))
	@echo "==== Building SceneQuery ($(SceneQuery_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f SceneQuery.make config=$(SceneQuery_config)
endif

SimulationController:
ifneq (,$(SimulationController_config))
	@echo "==== Building SimulationController ($(SimulationController_config)) ===="
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f SimulationController.make config=$(SimulationController_config)
endif

ORigin: assimp box2d origin-glfw glad ImGui Optick msdf-atlas-gen msdfgen yaml-cpp PhysX PhysXCommon PhysXFoundation PhysXPvdSDK PhysXExtensions PhysXCooking PhysXCharacterKinematic
ifneq (,$(ORigin_config))
	@echo "==== Building ORigin ($(ORigin_config)) ===="
	@${MAKE} --no-print-directory -C ORigin -f Makefile config=$(ORigin_config)
endif

Editor: ORigin
ifneq (,$(Editor_config))
	@echo "==== Building Editor ($(Editor_config)) ===="
	@${MAKE} --no-print-directory -C ORigin-Editor -f Makefile config=$(Editor_config)
endif

Runtime: ORigin
ifneq (,$(Runtime_config))
	@echo "==== Building Runtime ($(Runtime_config)) ===="
	@${MAKE} --no-print-directory -C ORigin-Runtime -f Makefile config=$(Runtime_config)
endif

ORigin-ScriptCore:
ifneq (,$(ORigin_ScriptCore_config))
	@echo "==== Building ORigin-ScriptCore ($(ORigin_ScriptCore_config)) ===="
	@${MAKE} --no-print-directory -C ORigin-ScriptCore -f Makefile config=$(ORigin_ScriptCore_config)
endif

Sandbox: ORigin
ifneq (,$(Sandbox_config))
	@echo "==== Building Sandbox ($(Sandbox_config)) ===="
	@${MAKE} --no-print-directory -C Sandbox -f Makefile config=$(Sandbox_config)
endif

clean:
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f assimp.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f origin-glfw.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f glad.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f ImGui.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f yaml-cpp.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f box2d.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f freetype.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f msdfgen.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f msdf-atlas-gen.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f JoltPhysics.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f Optick.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f FastXml.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f lowlevel.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f LowLevelAABB.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f LowLevelDynamics.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysX.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCharacterKinematic.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCommon.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXCooking.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXExtensions.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXFoundation.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXPvdSDK.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXTask.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXVehicle.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f PhysXVehicle2.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f SceneQuery.make clean
	@${MAKE} --no-print-directory -C ORigin/vendor/projectFiles -f SimulationController.make clean
	@${MAKE} --no-print-directory -C ORigin -f Makefile clean
	@${MAKE} --no-print-directory -C ORigin-Editor -f Makefile clean
	@${MAKE} --no-print-directory -C ORigin-Runtime -f Makefile clean
	@${MAKE} --no-print-directory -C ORigin-ScriptCore -f Makefile clean
	@${MAKE} --no-print-directory -C Sandbox -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   assimp"
	@echo "   origin-glfw"
	@echo "   glad"
	@echo "   ImGui"
	@echo "   yaml-cpp"
	@echo "   box2d"
	@echo "   freetype"
	@echo "   msdfgen"
	@echo "   msdf-atlas-gen"
	@echo "   JoltPhysics"
	@echo "   Optick"
	@echo "   FastXml"
	@echo "   lowlevel"
	@echo "   LowLevelAABB"
	@echo "   LowLevelDynamics"
	@echo "   PhysX"
	@echo "   PhysXCharacterKinematic"
	@echo "   PhysXCommon"
	@echo "   PhysXCooking"
	@echo "   PhysXExtensions"
	@echo "   PhysXFoundation"
	@echo "   PhysXPvdSDK"
	@echo "   PhysXTask"
	@echo "   PhysXVehicle"
	@echo "   PhysXVehicle2"
	@echo "   SceneQuery"
	@echo "   SimulationController"
	@echo "   ORigin"
	@echo "   Editor"
	@echo "   Runtime"
	@echo "   ORigin-ScriptCore"
	@echo "   Sandbox"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"